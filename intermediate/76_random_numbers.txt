package intermediate

import (
	"fmt"
	"math/rand"
	"time"
)

func main() {

	fmt.Println(rand.Intn(101))     //autoseeding prebuilt
	fmt.Println(rand.Intn(100) + 1) //To change the default lower limit from 0 to 1 by simply adding a number
	val := rand.New(rand.NewSource(time.Now().Unix()))
	fmt.Println(val.Intn(6) + 5)

	for{

		//Show the menu
		fmt.Println("Welcome to the Dice Game!")
		fmt.Println("1. Roll the dice")
		fmt.Println("2. Exit")
		fmt.Print("Enter your choice (1 or 2): ")

		var choice int
		_,err:= fmt.Scan(&choice)
		if err!=nil || (choice != 1 && choice != 2){
			fmt.Println("Invalid choice, please enter 1 or 2.")
			continue
		}
		if choice ==2{
			fmt.Println("Thanks for playing! Goodbye.")
			break
		}

		die1:= rand.Intn(6)+1
		die2:= rand.Intn(6)+1

		//show the results
		fmt.Printf("You rolled a %d and a %d. \n",die1,die2)
		fmt.Println("Total: ",die1+die2)

		//Ask of the user wants to roll again
		fmt.Println("Do you want to roll again? (y/n): ")
		var rollAgain string
		_,err=fmt.Scan(&rollAgain)
		if err!=nil || (rollAgain != "y" && rollAgain!="n"){
			fmt.Println("Invalid input, assuming no.")
			break
		} 
		if rollAgain == "n"{
			fmt.Println("Thanks for playing! Goodbye.")
			break
		}
	}

}

//Random Numbers
// Pseudo-Random Number Generation(PRNG)
// Seed: starting point for generating a sequence of random Numbers
// rand.Intn(n)
// rand.Float64()
// Considerations:
//  -> Deterministic Nature
//  -> Thread Safety
//  -> Cryptographic Security
