package basics

import "fmt"

func main() {

	//var arrayName [size]elementType

	// var numbers [5]int
	// fmt.Println(numbers)

	// numbers[4] = 20
	// fmt.Println(numbers)

	// numbers[0] = 9
	// fmt.Println(numbers)

	// fruits := [4]string{"Apple", "Banana", "Orange", "Grapes"}
	// fmt.Println("Fruits array: ", fruits)

	// fmt.Println("Third element:", fruits[2])

	// for index, value := range numbers{
	// 	fmt.Printf("Index: %d, Value: %d\n",index,value)
	// }

	// for i, v := range numbers {
	// 	fmt.Printf("Index: %d, Value: %d\n", i, v)
	// }

	//undescore is blank identifier, used to store unused values
	// for _, v := range numbers {
	// 	fmt.Printf("Value: %d\n", v)
	// }

	// a, _ := someFunction()
	// fmt.Println(a)
	//fmt.Println(b)

	// b:=2
	// _=b
	//above method avoids errors in case we declare a variable that we do not use immediately

	//Comparing Arrays
	// array1 := [3]int{1, 2, 3}
	// array2 := [3]int{1, 2, 3}

	// fmt.Println("Array1 is equal to Array2: ", array1 == array2)

	// var matrix [3][3]int = [3][3]int{
	// 	{1, 2, 3},
	// 	{4, 5, 6},
	// 	{7, 8, 9},
	// }

	// fmt.Println(matrix)

	originalArray := [3]int{1, 2, 3}
	var copiedArray *[3]int
	copiedArray = &originalArray
	copiedArray[0] = 100
	fmt.Println("Original array: ", originalArray)

}

// func someFunction() (int, int) {
// 	return 1, 2
// }

//first () for input types, second for return types
